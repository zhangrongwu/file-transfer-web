{"ast":null,"code":"var _jsxFileName = \"/Users/zhangrongwu/workspace/AI-Project/file-transfer-web/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport QRCode from 'qrcode.react';\nimport { FileTransferService } from './services/fileTransferService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [qrChunks, setQRChunks] = useState([]);\n  const [currentChunkIndex, setCurrentChunkIndex] = useState(0);\n  const [receivedChunks, setReceivedChunks] = useState([]);\n  const [isTransmitting, setIsTransmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const intervalRef = useRef(null);\n  const startDynamicQRTransmission = () => {\n    if (qrChunks.length === 0) {\n      setError('请先选择文件');\n      return;\n    }\n    setIsTransmitting(true);\n    setCurrentChunkIndex(0);\n    setProgress(0);\n    intervalRef.current = setInterval(() => {\n      setCurrentChunkIndex(prevIndex => {\n        const nextIndex = (prevIndex + 1) % qrChunks.length;\n\n        // 更新进度\n        setProgress(Math.round(nextIndex / qrChunks.length * 100));\n\n        // 如果已经循环完一圈，停止传输\n        if (nextIndex === 0) {\n          stopDynamicQRTransmission();\n        }\n        return nextIndex;\n      });\n    }, 500); // 每500毫秒切换一个二维码\n  };\n  const stopDynamicQRTransmission = () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n      setIsTransmitting(false);\n    }\n  };\n  const handleFileSelect = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      try {\n        // 限制文件大小（例如，限制在 1MB）\n        if (file.size > 1 * 1024 * 1024) {\n          setError('文件过大，请选择小于 1MB 的文件');\n          return;\n        }\n        const chunks = await FileTransferService.fileToQRChunks(file);\n        setSelectedFile(file);\n        setQRChunks(chunks);\n        setCurrentChunkIndex(0);\n        setError(null);\n\n        // 自动开始动态二维码传输\n        startDynamicQRTransmission();\n      } catch (error) {\n        console.error('文件处理错误:', error);\n        setError(error instanceof Error ? error.message : '文件处理失败');\n      }\n    }\n  };\n  const reconstructFile = async () => {\n    try {\n      if (receivedChunks.length === 0) {\n        setError('请先接收文件分块');\n        return;\n      }\n      const reconstructedFile = await FileTransferService.qrChunksToFile(receivedChunks, (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'downloaded_file');\n\n      // 创建下载链接\n      const url = URL.createObjectURL(reconstructedFile);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = reconstructedFile.name;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // 重置接收的分块\n      setReceivedChunks([]);\n      setError(null);\n    } catch (error) {\n      console.error('文件重组错误:', error);\n      setError(error instanceof Error ? error.message : '文件重组失败');\n    }\n  };\n  const renderQRCode = () => {\n    if (!qrChunks.length) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrChunks[currentChunkIndex],\n        size: 256,\n        level: 'H'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5206\\u5757 \", currentChunkIndex + 1, \" / \", qrChunks.length, isTransmitting ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopDynamicQRTransmission,\n          children: \"\\u505C\\u6B62\\u4F20\\u8F93\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startDynamicQRTransmission,\n          children: \"\\u5F00\\u59CB\\u52A8\\u6001\\u4F20\\u8F93\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          backgroundColor: '#f0f0f0',\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${progress}%`,\n            height: '10px',\n            backgroundColor: 'green',\n            transition: 'width 0.5s ease-in-out'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u52A8\\u6001\\u4E8C\\u7EF4\\u7801\\u6587\\u4EF6\\u4F20\\u8F93\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#ffdddd',\n        color: 'red',\n        padding: '10px',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileSelect,\n      style: {\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), selectedFile && renderQRCode(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u63A5\\u6536\\u6587\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u626B\\u63CF\\u4E8C\\u7EF4\\u7801\\u540E\\uFF0C\\u7C98\\u8D34\\u4E8C\\u7EF4\\u7801\\u5185\\u5BB9\\u5230\\u8FD9\\u91CC\",\n        rows: 5,\n        style: {\n          width: '100%',\n          marginBottom: '10px'\n        },\n        onChange: e => {\n          try {\n            const chunk = JSON.parse(e.target.value);\n            setReceivedChunks(prev => {\n              // 避免重复添加\n              if (!prev.some(existingChunk => JSON.parse(existingChunk).index === chunk.index)) {\n                return [...prev, JSON.stringify(chunk)];\n              }\n              return prev;\n            });\n            setError(null);\n          } catch (error) {\n            console.error('解析错误:', error);\n            setError('二维码内容解析失败');\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reconstructFile,\n        disabled: receivedChunks.length === 0,\n        children: \"\\u91CD\\u7EC4\\u6587\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5DF2\\u63A5\\u6536\\u5206\\u5757: \", receivedChunks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xONVHYNvpNb+cbSaBU9gBRjopgs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","QRCode","FileTransferService","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","qrChunks","setQRChunks","currentChunkIndex","setCurrentChunkIndex","receivedChunks","setReceivedChunks","isTransmitting","setIsTransmitting","error","setError","progress","setProgress","intervalRef","startDynamicQRTransmission","length","current","setInterval","prevIndex","nextIndex","Math","round","stopDynamicQRTransmission","clearInterval","handleFileSelect","event","_event$target$files","file","target","files","size","chunks","fileToQRChunks","console","Error","message","reconstructFile","reconstructedFile","qrChunksToFile","name","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","renderQRCode","style","display","flexDirection","alignItems","children","value","level","fileName","_jsxFileName","lineNumber","columnNumber","onClick","width","backgroundColor","marginTop","height","transition","maxWidth","margin","padding","textAlign","color","marginBottom","type","onChange","placeholder","rows","e","chunk","JSON","parse","prev","some","existingChunk","index","stringify","disabled","_c","$RefreshReg$"],"sources":["/Users/zhangrongwu/workspace/AI-Project/file-transfer-web/src/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport QRCode from 'qrcode.react';\nimport { FileTransferService } from './services/fileTransferService';\n\nconst App: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [qrChunks, setQRChunks] = useState<string[]>([]);\n  const [currentChunkIndex, setCurrentChunkIndex] = useState(0);\n  const [receivedChunks, setReceivedChunks] = useState<string[]>([]);\n  const [isTransmitting, setIsTransmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [progress, setProgress] = useState(0);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  const startDynamicQRTransmission = () => {\n    if (qrChunks.length === 0) {\n      setError('请先选择文件');\n      return;\n    }\n\n    setIsTransmitting(true);\n    setCurrentChunkIndex(0);\n    setProgress(0);\n\n    intervalRef.current = setInterval(() => {\n      setCurrentChunkIndex(prevIndex => {\n        const nextIndex = (prevIndex + 1) % qrChunks.length;\n        \n        // 更新进度\n        setProgress(Math.round((nextIndex / qrChunks.length) * 100));\n\n        // 如果已经循环完一圈，停止传输\n        if (nextIndex === 0) {\n          stopDynamicQRTransmission();\n        }\n\n        return nextIndex;\n      });\n    }, 500); // 每500毫秒切换一个二维码\n  };\n\n  const stopDynamicQRTransmission = () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n      setIsTransmitting(false);\n    }\n  };\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    \n    if (file) {\n      try {\n        // 限制文件大小（例如，限制在 1MB）\n        if (file.size > 1 * 1024 * 1024) {\n          setError('文件过大，请选择小于 1MB 的文件');\n          return;\n        }\n\n        const chunks = await FileTransferService.fileToQRChunks(file);\n        setSelectedFile(file);\n        setQRChunks(chunks);\n        setCurrentChunkIndex(0);\n        setError(null);\n        \n        // 自动开始动态二维码传输\n        startDynamicQRTransmission();\n      } catch (error) {\n        console.error('文件处理错误:', error);\n        setError(error instanceof Error ? error.message : '文件处理失败');\n      }\n    }\n  };\n\n  const reconstructFile = async () => {\n    try {\n      if (receivedChunks.length === 0) {\n        setError('请先接收文件分块');\n        return;\n      }\n\n      const reconstructedFile = await FileTransferService.qrChunksToFile(\n        receivedChunks, \n        selectedFile?.name || 'downloaded_file'\n      );\n      \n      // 创建下载链接\n      const url = URL.createObjectURL(reconstructedFile);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = reconstructedFile.name;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      // 重置接收的分块\n      setReceivedChunks([]);\n      setError(null);\n    } catch (error) {\n      console.error('文件重组错误:', error);\n      setError(error instanceof Error ? error.message : '文件重组失败');\n    }\n  };\n\n  const renderQRCode = () => {\n    if (!qrChunks.length) return null;\n\n    return (\n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center' \n      }}>\n        <QRCode \n          value={qrChunks[currentChunkIndex]} \n          size={256} \n          level={'H'} \n        />\n        <p>\n          分块 {currentChunkIndex + 1} / {qrChunks.length}\n          {isTransmitting ? (\n            <button onClick={stopDynamicQRTransmission}>\n              停止传输\n            </button>\n          ) : (\n            <button onClick={startDynamicQRTransmission}>\n              开始动态传输\n            </button>\n          )}\n        </p>\n        <div style={{ width: '100%', backgroundColor: '#f0f0f0', marginTop: '10px' }}>\n          <div \n            style={{ \n              width: `${progress}%`, \n              height: '10px', \n              backgroundColor: 'green',\n              transition: 'width 0.5s ease-in-out'\n            }}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ \n      maxWidth: '600px', \n      margin: '0 auto', \n      padding: '20px', \n      textAlign: 'center' \n    }}>\n      <h1>动态二维码文件传输</h1>\n      \n      {error && (\n        <div style={{ \n          backgroundColor: '#ffdddd', \n          color: 'red', \n          padding: '10px', \n          marginBottom: '10px' \n        }}>\n          {error}\n        </div>\n      )}\n\n      <input \n        type=\"file\" \n        onChange={handleFileSelect}\n        style={{ margin: '20px 0' }}\n      />\n\n      {selectedFile && renderQRCode()}\n\n      <div>\n        <h2>接收文件</h2>\n        <textarea \n          placeholder=\"扫描二维码后，粘贴二维码内容到这里\"\n          rows={5}\n          style={{ width: '100%', marginBottom: '10px' }}\n          onChange={(e) => {\n            try {\n              const chunk = JSON.parse(e.target.value);\n              setReceivedChunks(prev => {\n                // 避免重复添加\n                if (!prev.some(existingChunk => \n                  JSON.parse(existingChunk).index === chunk.index\n                )) {\n                  return [...prev, JSON.stringify(chunk)];\n                }\n                return prev;\n              });\n              setError(null);\n            } catch (error) {\n              console.error('解析错误:', error);\n              setError('二维码内容解析失败');\n            }\n          }}\n        />\n        <button \n          onClick={reconstructFile}\n          disabled={receivedChunks.length === 0}\n        >\n          重组文件\n        </button>\n\n        <p>已接收分块: {receivedChunks.length}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}