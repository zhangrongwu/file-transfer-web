{"ast":null,"code":"var _jsxFileName = \"/Users/zhangrongwu/workspace/AI-Project/file-transfer-web/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport QRCode from 'qrcode.react';\nimport { FileTransferService } from './services/fileTransferService';\n\n// 文件大小限制（100MB）\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_FILE_SIZE = 100 * 1024 * 1024;\n\n// 允许的文件类型\nconst ALLOWED_FILE_TYPES = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf', 'text/plain', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [qrChunks, setQRChunks] = useState([]);\n  const [currentChunkIndex, setCurrentChunkIndex] = useState(0);\n  const [receivedChunks, setReceivedChunks] = useState([]);\n  const [isTransmitting, setIsTransmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const intervalRef = useRef(null);\n  const startDynamicQRTransmission = () => {\n    if (qrChunks.length === 0) return;\n    setIsTransmitting(true);\n    setCurrentChunkIndex(0);\n    intervalRef.current = setInterval(() => {\n      setCurrentChunkIndex(prevIndex => {\n        const nextIndex = (prevIndex + 1) % qrChunks.length;\n\n        // 如果已经循环完一圈，停止传输\n        if (nextIndex === 0) {\n          stopDynamicQRTransmission();\n        }\n        return nextIndex;\n      });\n    }, 500); // 每500毫秒切换一个二维码\n  };\n  const stopDynamicQRTransmission = () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n      setIsTransmitting(false);\n    }\n  };\n  const handleFileSelect = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n\n    // 重置错误状态\n    setError(null);\n    if (file) {\n      // 验证文件大小\n      if (file.size > MAX_FILE_SIZE) {\n        setError(`文件大小不能超过 ${MAX_FILE_SIZE / 1024 / 1024}MB`);\n        return;\n      }\n\n      // 验证文件类型\n      if (!ALLOWED_FILE_TYPES.includes(file.type)) {\n        setError('不支持的文件类型');\n        return;\n      }\n      try {\n        const chunks = await FileTransferService.fileToQRChunks(file);\n        setSelectedFile(file);\n        setQRChunks(chunks);\n        setCurrentChunkIndex(0);\n\n        // 自动开始动态二维码传输\n        startDynamicQRTransmission();\n      } catch (error) {\n        console.error('文件处理错误:', error);\n      }\n    }\n  };\n  const reconstructFile = async () => {\n    try {\n      if (receivedChunks.length > 0) {\n        const reconstructedFile = await FileTransferService.qrChunksToFile(receivedChunks, (selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile.name) || 'downloaded_file');\n\n        // 创建下载链接\n        const url = URL.createObjectURL(reconstructedFile);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = reconstructedFile.name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        // 重置接收的分块\n        setReceivedChunks([]);\n      }\n    } catch (error) {\n      console.error('文件重组错误:', error);\n    }\n  };\n  const renderQRCode = () => {\n    if (!qrChunks.length) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrChunks[currentChunkIndex],\n        size: 256,\n        level: 'H'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5206\\u5757 \", currentChunkIndex + 1, \" / \", qrChunks.length, isTransmitting ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopDynamicQRTransmission,\n          children: \"\\u505C\\u6B62\\u4F20\\u8F93\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startDynamicQRTransmission,\n          children: \"\\u5F00\\u59CB\\u52A8\\u6001\\u4F20\\u8F93\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  };\n  const formatFileSize = bytes => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(2)} KB`;\n    return `${(bytes / 1024 / 1024).toFixed(2)} MB`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto',\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u52A8\\u6001\\u4E8C\\u7EF4\\u7801\\u6587\\u4EF6\\u4F20\\u8F93\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileSelect,\n      style: {\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        backgroundColor: '#ffeeee',\n        padding: '10px',\n        borderRadius: '5px',\n        marginBottom: '15px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        backgroundColor: '#f9f9f9',\n        padding: '20px',\n        borderRadius: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u6587\\u4EF6\\u540D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), \" \", selectedFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u6587\\u4EF6\\u5927\\u5C0F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), \" \", formatFileSize(selectedFile.size), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u6587\\u4EF6\\u7C7B\\u578B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), \" \", selectedFile.type || '未知']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), renderQRCode(), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reconstructFile,\n          disabled: receivedChunks.length === 0,\n          children: \"\\u91CD\\u7EC4\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u63A5\\u6536\\u6587\\u4EF6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\u626B\\u63CF\\u4E8C\\u7EF4\\u7801\\u540E\\uFF0C\\u7C98\\u8D34\\u4E8C\\u7EF4\\u7801\\u5185\\u5BB9\\u5230\\u8FD9\\u91CC\",\n        rows: 5,\n        style: {\n          width: '100%',\n          marginBottom: '10px'\n        },\n        onChange: e => {\n          try {\n            const chunk = JSON.parse(e.target.value);\n            setReceivedChunks(prev => [...prev, JSON.stringify(chunk)]);\n          } catch (error) {\n            console.error('解析错误:', error);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5DF2\\u63A5\\u6536\\u5206\\u5757: \", receivedChunks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wAbj4oLTgX2JVV0n/BkFr4mH0f0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","QRCode","FileTransferService","jsxDEV","_jsxDEV","MAX_FILE_SIZE","ALLOWED_FILE_TYPES","App","_s","selectedFile","setSelectedFile","qrChunks","setQRChunks","currentChunkIndex","setCurrentChunkIndex","receivedChunks","setReceivedChunks","isTransmitting","setIsTransmitting","error","setError","intervalRef","startDynamicQRTransmission","length","current","setInterval","prevIndex","nextIndex","stopDynamicQRTransmission","clearInterval","handleFileSelect","event","_event$target$files","file","target","files","size","includes","type","chunks","fileToQRChunks","console","reconstructFile","reconstructedFile","qrChunksToFile","name","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","renderQRCode","style","display","flexDirection","alignItems","children","value","level","fileName","_jsxFileName","lineNumber","columnNumber","onClick","formatFileSize","bytes","toFixed","maxWidth","margin","padding","textAlign","onChange","color","backgroundColor","borderRadius","marginBottom","marginTop","disabled","placeholder","rows","width","e","chunk","JSON","parse","prev","stringify","_c","$RefreshReg$"],"sources":["/Users/zhangrongwu/workspace/AI-Project/file-transfer-web/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport QRCode from 'qrcode.react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FileTransferService } from './services/fileTransferService';\n\n// 文件大小限制（100MB）\nconst MAX_FILE_SIZE = 100 * 1024 * 1024; \n\n// 允许的文件类型\nconst ALLOWED_FILE_TYPES = [\n  'image/jpeg', \n  'image/png', \n  'image/gif', \n  'application/pdf', \n  'text/plain', \n  'application/msword', \n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n];\n\nconst App: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [qrChunks, setQRChunks] = useState<string[]>([]);\n  const [currentChunkIndex, setCurrentChunkIndex] = useState(0);\n  const [receivedChunks, setReceivedChunks] = useState<string[]>([]);\n  const [isTransmitting, setIsTransmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  const startDynamicQRTransmission = () => {\n    if (qrChunks.length === 0) return;\n\n    setIsTransmitting(true);\n    setCurrentChunkIndex(0);\n\n    intervalRef.current = setInterval(() => {\n      setCurrentChunkIndex(prevIndex => {\n        const nextIndex = (prevIndex + 1) % qrChunks.length;\n        \n        // 如果已经循环完一圈，停止传输\n        if (nextIndex === 0) {\n          stopDynamicQRTransmission();\n        }\n\n        return nextIndex;\n      });\n    }, 500); // 每500毫秒切换一个二维码\n  };\n\n  const stopDynamicQRTransmission = () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n      setIsTransmitting(false);\n    }\n  };\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    \n    // 重置错误状态\n    setError(null);\n\n    if (file) {\n      // 验证文件大小\n      if (file.size > MAX_FILE_SIZE) {\n        setError(`文件大小不能超过 ${MAX_FILE_SIZE / 1024 / 1024}MB`);\n        return;\n      }\n\n      // 验证文件类型\n      if (!ALLOWED_FILE_TYPES.includes(file.type)) {\n        setError('不支持的文件类型');\n        return;\n      }\n\n      try {\n        const chunks = await FileTransferService.fileToQRChunks(file);\n        setSelectedFile(file);\n        setQRChunks(chunks);\n        setCurrentChunkIndex(0);\n        \n        // 自动开始动态二维码传输\n        startDynamicQRTransmission();\n      } catch (error) {\n        console.error('文件处理错误:', error);\n      }\n    }\n  };\n\n  const reconstructFile = async () => {\n    try {\n      if (receivedChunks.length > 0) {\n        const reconstructedFile = await FileTransferService.qrChunksToFile(\n          receivedChunks, \n          selectedFile?.name || 'downloaded_file'\n        );\n        \n        // 创建下载链接\n        const url = URL.createObjectURL(reconstructedFile);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = reconstructedFile.name;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        // 重置接收的分块\n        setReceivedChunks([]);\n      }\n    } catch (error) {\n      console.error('文件重组错误:', error);\n    }\n  };\n\n  const renderQRCode = () => {\n    if (!qrChunks.length) return null;\n\n    return (\n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center' \n      }}>\n        <QRCode \n          value={qrChunks[currentChunkIndex]} \n          size={256} \n          level={'H'} \n        />\n        <p>\n          分块 {currentChunkIndex + 1} / {qrChunks.length}\n          {isTransmitting ? (\n            <button onClick={stopDynamicQRTransmission}>\n              停止传输\n            </button>\n          ) : (\n            <button onClick={startDynamicQRTransmission}>\n              开始动态传输\n            </button>\n          )}\n        </p>\n      </div>\n    );\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes < 1024) return `${bytes} B`;\n    if (bytes < 1024 * 1024) return `${(bytes / 1024).toFixed(2)} KB`;\n    return `${(bytes / 1024 / 1024).toFixed(2)} MB`;\n  };\n\n  return (\n    <div style={{ \n      maxWidth: '600px', \n      margin: '0 auto', \n      padding: '20px', \n      textAlign: 'center' \n    }}>\n      <h1>动态二维码文件传输</h1>\n      \n      <input \n        type=\"file\" \n        onChange={handleFileSelect}\n        style={{ margin: '20px 0' }}\n      />\n\n      {error && (\n        <div style={{ \n          color: 'red', \n          backgroundColor: '#ffeeee', \n          padding: '10px', \n          borderRadius: '5px', \n          marginBottom: '15px' \n        }}>\n          {error}\n        </div>\n      )}\n\n      {selectedFile && (\n        <div style={{ \n          textAlign: 'center', \n          backgroundColor: '#f9f9f9', \n          padding: '20px', \n          borderRadius: '10px' \n        }}>\n          <p>\n            <strong>文件名:</strong> {selectedFile.name}\n            <br />\n            <strong>文件大小:</strong> {formatFileSize(selectedFile.size)}\n            <br />\n            <strong>文件类型:</strong> {selectedFile.type || '未知'}\n          </p>\n          \n          {renderQRCode()}\n\n          <div style={{ marginTop: '20px' }}>\n            <button \n              onClick={reconstructFile}\n              disabled={receivedChunks.length === 0}\n            >\n              重组文件\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <h2>接收文件</h2>\n        <textarea \n          placeholder=\"扫描二维码后，粘贴二维码内容到这里\"\n          rows={5}\n          style={{ width: '100%', marginBottom: '10px' }}\n          onChange={(e) => {\n            try {\n              const chunk = JSON.parse(e.target.value);\n              setReceivedChunks(prev => [...prev, JSON.stringify(chunk)]);\n            } catch (error) {\n              console.error('解析错误:', error);\n            }\n          }}\n        />\n        <p>已接收分块: {receivedChunks.length}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}